{"remainingRequest":"/Users/julianoreis/workspace/nave-kit/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/julianoreis/workspace/nave-kit/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/julianoreis/workspace/nave-kit/node_modules/source-map-loader/index.js!/Users/julianoreis/workspace/nave-kit/src/Input/Input.js","dependencies":[{"path":"/Users/julianoreis/workspace/nave-kit/src/Input/Input.js","mtime":1564872408468},{"path":"/Users/julianoreis/workspace/nave-kit/node_modules/cache-loader/dist/cjs.js","mtime":1564281777250},{"path":"/Users/julianoreis/workspace/nave-kit/node_modules/thread-loader/dist/cjs.js","mtime":1564281778203},{"path":"/Users/julianoreis/workspace/nave-kit/node_modules/babel-loader/lib/index.js","mtime":1563398014365},{"path":"/Users/julianoreis/workspace/nave-kit/node_modules/source-map-loader/index.js","mtime":1564281778107}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/julianoreis/workspace/nave-kit/src/Input/Input.js"],"names":["Input","props","label","rest","leftIcon","disabled","rightIcon","error","caption","Wrapper","styled","div","colors","theme","verified","blue","InputContainer","mediumGrey","grey","red","green","Label","Typography","StyledInput","input","darkGrey","Error","Caption","propTypes","PropTypes","string","element","bool"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Typography } from '../'\nimport modifiers from '../helpers/modifiers'\n\nconst Input = props => {\n  const { label, ...rest } = props\n\n  return (\n    <Wrapper {...rest}>\n      {label && (\n        <Label {...rest}>\n          {label}\n        </Label>\n      )}\n      <InputContainer {...rest}>\n        {rest.leftIcon && rest.leftIcon}\n        <StyledInput disabled={rest.disabled} {...rest} />\n        {rest.rightIcon && rest.rightIcon}\n      </InputContainer>\n      {rest.error && <Error>{rest.error}</Error>}\n      {!rest.error && rest.caption && <Caption>{rest.caption}</Caption>}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  ${props => modifiers(props)}\n  ${({ theme: { colors }, disabled, error, verified }) => {\n    if (disabled || error || verified) {\n      return ''\n    }\n    return (`\n      &:focus-within {\n        div {\n          border: 1px solid ${colors.blue};\n        }\n        p:first-child {\n          color: ${colors.blue};\n        }\n      }\n    `)\n  }}\n`\n\nconst InputContainer = styled.div`\n  box-sizing: border-box;\n  border-radius: 4px;\n  transition: all 0.3s linear;\n  display: flex;\n  align-items: center;\n  width: 328px;\n  height: 36px;\n  padding: 8px 10px;\n  border: 1px solid ${({ theme }) => theme.colors.mediumGrey};\n  ${({ theme: { colors }, ...props }) => {\n    if (props.disabled) {\n      return (`\n        border: 1px solid rgba(37, 37, 37, 0.3);\n        background: ${colors.grey};`\n      )\n    }\n    if (props.error) {\n      return `border: 1px solid ${colors.red};`\n    }\n    if (props.verified) {\n      return `border: 1px solid ${colors.green};`\n    }\n  }}\n`\n\nconst Label = styled(Typography)`\n  margin: 0;\n  margin-bottom: 5px;\n  transition: all 0.3s linear;\n  ${({ theme: { colors }, ...props }) => {\n    if (props.disabled) {\n      return `color: ${colors.mediumGrey};`\n    }\n    if (props.error) {\n      return `color: ${colors.red};`\n    }\n  }}\n`\n\nconst StyledInput = styled.input`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 16px;\n  line-height: 19px;\n  border: none;\n  outline: none;\n  flex: 1;\n  height: 100%;\n  background: transparent;\n  padding-left: ${props => props.leftIcon ? '4px' : 0};\n  padding-right: ${props => props.rightIcon ? '4px' : 0};\n  color: ${props => props.theme.colors.darkGrey};\n  ::placeholder {\n    color: rgba(37, 37, 37, 0.3);\n  }\n`\n\nconst Error = styled(Typography)`\n  margin: 0;\n  margin-top: 5px;\n  color: ${({ theme }) => theme.colors.red};\n  font-size: 12px;\n`\n\nconst Caption = styled(Typography)`\n  margin: 0;\n  margin-top: 5px;\n  color: ${({ theme }) => theme.colors.mediumGrey};\n  font-size: 12px;\n`\n\nInput.propTypes = {\n  label: PropTypes.string,\n  error: PropTypes.string,\n  caption: PropTypes.string,\n  leftIcon: PropTypes.element,\n  rightIcon: PropTypes.element,\n  verified: PropTypes.bool\n}\n\nexport default Input\n"]}]}